{"ast":null,"code":"var _jsxFileName = \"/Users/morganb/Development/code/Mod3/full-stack-react-ruby/react-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport Products from './Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [products, setProducts] = useState([]); // I think this is what we need to do to create state for our orders page/shopping cart \n  // const [orders, setOrders] = useState([]);\n  // useEffect(() => {\n  //   fetch(\"http://localhost:9290/test\")\n  // .then((r) => r.json())\n  // .then((data) => console.log(\"hello\"));\n  // },[])\n\n  useEffect(() => {\n    fetch(\"http://localhost:9001/malas\").then(r => r.json()).then(data => setProducts(data));\n  }, []); //moved to Header.js\n  // const [search, setSearch] = useState(\"\");\n  // const [sortBy, setSortBy] = useState(\"newest\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/products\").then(r => r.json()).then(data, setProducts(data));\n  }, []); // ***** Moved to Header.js\n  //    function handleSearch(searchText) {\n  //         setSearch(searchText);\n  //    }\n  //    function handleSort(dropdown) {\n  //        setSortBy(dropdown)\n  //    }\n  //    const sortedProducts = [...products].sort((a, b) => {\n  //     if (sortBy === \"name\") {\n  //       return a.name - b.name;\n  //     } else if (sortBy === \"price\"){\n  //         return a.price - b.price;\n  //     } else {\n  //         return a.id - b.id;\n  //     }\n  //   });\n  //     const updatedListings = sortedProducts.filter((product)=> product.name.toLowerCase().includes(search.toLowerCase()) || product.description.toLowerCase().includes(search.toLowerCase()));\n  // ***** \n  // I think this is how we will add products to our order page/cart \n  //    function handleAddToOrder(productToAdd) {\n  //         const productInFavorites = orders.find(\n  //         (product) => product.id === productToAdd.id\n  //         );\n  //         if (!productInFavorites) {\n  //             setFavorites([...orders, productToAdd]);\n  //         }\n  //     }\n  //     function handleRemoveFavorite(productToRemove) {\n  //         setOrders((orders)=> orders.filter((product)=> product.id !== productToRemove.id));\n  //     }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flatiron School: Phase 3 Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Created by Hoa Le and Morgan Byrne\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      products: updatedListings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yIMaXFJFJk3e4dtbshAaMPRShpc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/morganb/Development/code/Mod3/full-stack-react-ruby/react-frontend/src/App.js"],"names":["React","useEffect","useState","Products","App","products","setProducts","fetch","then","r","json","data","updatedListings"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC,CADa,CAEX;AACA;AAEF;AACA;AACA;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAAI,IAAEL,WAAW,CAACK,IAAD,CAFvB;AAGH,GAJU,EAIR,EAJQ,CAAT,CAVa,CAkBX;AACA;AACA;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAFN,EAEYL,WAAW,CAACK,IAAD,CAFvB;AAGH,GAJU,EAIR,EAJQ,CAAT,CAvBW,CA6Bf;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACE;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAW,MAAA,QAAQ,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1EQR,G;;KAAAA,G;AA4ET,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useEffect, useState } from \"react\"\nimport Products from './Products';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n    // I think this is what we need to do to create state for our orders page/shopping cart \n    // const [orders, setOrders] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(\"http://localhost:9290/test\")\n  // .then((r) => r.json())\n  // .then((data) => console.log(\"hello\"));\n  // },[])\n  useEffect(() => {\n    fetch(\"http://localhost:9001/malas\")\n    .then(r=>r.json())\n    .then(data=>setProducts(data))\n}, [])\n\n\n\n    //moved to Header.js\n    // const [search, setSearch] = useState(\"\");\n    // const [sortBy, setSortBy] = useState(\"newest\");\n\n\n    useEffect(() => {\n      fetch(\"http://localhost:3001/products\")\n      .then(r=>r.json())\n      .then(data, setProducts(data))\n  }, [])\n\n// ***** Moved to Header.js\n//    function handleSearch(searchText) {\n//         setSearch(searchText);\n//    }\n\n//    function handleSort(dropdown) {\n//        setSortBy(dropdown)\n//    }\n\n//    const sortedProducts = [...products].sort((a, b) => {\n//     if (sortBy === \"name\") {\n//       return a.name - b.name;\n//     } else if (sortBy === \"price\"){\n//         return a.price - b.price;\n//     } else {\n//         return a.id - b.id;\n//     }\n//   });\n\n//     const updatedListings = sortedProducts.filter((product)=> product.name.toLowerCase().includes(search.toLowerCase()) || product.description.toLowerCase().includes(search.toLowerCase()));\n  // ***** \n\n\n// I think this is how we will add products to our order page/cart \n//    function handleAddToOrder(productToAdd) {\n//         const productInFavorites = orders.find(\n//         (product) => product.id === productToAdd.id\n//         );\n//         if (!productInFavorites) {\n//             setFavorites([...orders, productToAdd]);\n//         }\n//     }\n\n//     function handleRemoveFavorite(productToRemove) {\n//         setOrders((orders)=> orders.filter((product)=> product.id !== productToRemove.id));\n//     }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Flatiron School: Phase 3 Project</h1>\n      <h3>Created by Hoa Le and Morgan Byrne</h3>\n      <Products  products={updatedListings} />\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}