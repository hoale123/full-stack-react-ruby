{"ast":null,"code":"var _jsxFileName = \"/Users/morganb/Development/code/Mod3/full-stack-react-ruby/react-frontend/src/Button.js\";\nimport React from 'react';\nimport { formShape } from 'rc-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.submit = () => {\n      this.props.form.validateFields((error, value) => {\n        console.log(error, value);\n      });\n    };\n  }\n\n  render() {\n    let errors;\n    const {\n      getFieldProps,\n      getFieldError\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getFieldProps('normal')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getFieldProps('required', {\n          onChange() {},\n\n          // have to write original onChange here if you need\n          rules: [{\n            required: true\n          }]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), (errors = getFieldError('required')) ? errors.join(',') : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.submit,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nForm.propTypes = {\n  form: formShape\n};\nexport default Form;","map":{"version":3,"sources":["/Users/morganb/Development/code/Mod3/full-stack-react-ruby/react-frontend/src/Button.js"],"names":["React","formShape","Form","Component","submit","props","form","validateFields","error","value","console","log","render","errors","getFieldProps","getFieldError","onChange","rules","required","join","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAKjCC,MALiC,GAKxB,MAAM;AACb,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/CC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,KAAnB;AACD,OAFD;AAGD,KATgC;AAAA;;AAWjCG,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAJ;AACA,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAmC,KAAKV,KAAL,CAAWC,IAApD;AACA,wBACE;AAAA,8BACE,sBAAWQ,aAAa,CAAC,QAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,sBAAWA,aAAa,CAAC,UAAD,EAAa;AACnCE,UAAAA,QAAQ,GAAE,CAAE,CADuB;;AACrB;AACdC,UAAAA,KAAK,EAAE,CAAC;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAAD;AAF4B,SAAb;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,EAMG,CAACL,MAAM,GAAGE,aAAa,CAAC,UAAD,CAAvB,IAAuCF,MAAM,CAACM,IAAP,CAAY,GAAZ,CAAvC,GAA0D,IAN7D,eAOE;AAAQ,QAAA,OAAO,EAAE,KAAKf,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAzBgC;;AAA7BF,I,CACGkB,S,GAAY;AACjBd,EAAAA,IAAI,EAAEL;AADW,C;AA2BrB,eAAeC,IAAf","sourcesContent":["import React from 'react';\nimport { formShape } from 'rc-form';\n\nclass Form extends React.Component {\n  static propTypes = {\n    form: formShape,\n  };\n\n  submit = () => {\n    this.props.form.validateFields((error, value) => {\n      console.log(error, value);\n    });\n  }\n\n  render() {\n    let errors;\n    const { getFieldProps, getFieldError } = this.props.form;\n    return (\n      <div>\n        <input {...getFieldProps('normal')}/>\n        <input {...getFieldProps('required', {\n          onChange(){}, // have to write original onChange here if you need\n          rules: [{required: true}],\n        })}/>\n        {(errors = getFieldError('required')) ? errors.join(',') : null}\n        <button onClick={this.submit}>submit</button>\n      </div>\n    );\n  }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}