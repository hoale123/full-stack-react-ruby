{"ast":null,"code":"var _jsxFileName = \"/Users/morganb/Development/code/Mod3/full-stack-react-ruby/react-frontend/src/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  const [products, setProducts] = useState([]); // I think this is what we need to do to create state for our orders page/shopping cart \n  // const [orders, setOrders] = useState([]);\n  //moved to Header.js\n  // const [search, setSearch] = useState(\"\");\n  // const [sortBy, setSortBy] = useState(\"newest\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/products\").then(r => r.json()).then(data, setProducts(data));\n  }, []); // ***** Moved to Header.js\n  //    function handleSearch(searchText) {\n  //         setSearch(searchText);\n  //    }\n  //    function handleSort(dropdown) {\n  //        setSortBy(dropdown)\n  //    }\n  //    const sortedProducts = [...products].sort((a, b) => {\n  //     if (sortBy === \"name\") {\n  //       return a.name - b.name;\n  //     } else if (sortBy === \"price\"){\n  //         return a.price - b.price;\n  //     } else {\n  //         return a.id - b.id;\n  //     }\n  //   });\n  //     const updatedListings = sortedProducts.filter((product)=> product.name.toLowerCase().includes(search.toLowerCase()) || product.description.toLowerCase().includes(search.toLowerCase()));\n  // ***** \n  // I think this is how we will add products to our order page/cart \n  //    function handleAddToOrder(productToAdd) {\n  //         const productInFavorites = orders.find(\n  //         (product) => product.id === productToAdd.id\n  //         );\n  //         if (!productInFavorites) {\n  //             setFavorites([...orders, productToAdd]);\n  //         }\n  //     }\n  //     function handleRemoveFavorite(productToRemove) {\n  //         setOrders((orders)=> orders.filter((product)=> product.id !== productToRemove.id));\n  //     }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shop All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MalaListings, {\n      products: updatedListings // handleAddLikes={handleAddLikes} \n      // handleAddFavorite={handleAddFavorite} \n      // andleRemoveFavorite={handleRemoveFavorite} \n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Products, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/morganb/Development/code/Mod3/full-stack-react-ruby/react-frontend/src/Products.js"],"names":["React","useState","useEffect","Products","products","setProducts","fetch","then","r","json","data","updatedListings"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC,CADgB,CAEhB;AACA;AAEA;AACA;AACA;;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAFN,EAEYL,WAAW,CAACK,IAAD,CAFvB;AAGH,GAJQ,EAIN,EAJM,CAAT,CAVgB,CAgBpB;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACI;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AACI,MAAA,QAAQ,EAAEC,eADd,CAEI;AACA;AACA;;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAlEQR,Q;;KAAAA,Q;AAqET,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Products() {\n    const [products, setProducts] = useState([]);\n    // I think this is what we need to do to create state for our orders page/shopping cart \n    // const [orders, setOrders] = useState([]);\n\n    //moved to Header.js\n    // const [search, setSearch] = useState(\"\");\n    // const [sortBy, setSortBy] = useState(\"newest\");\n\n\n    useEffect(() => {\n        fetch(\"http://localhost:3001/products\")\n        .then(r=>r.json())\n        .then(data, setProducts(data))\n    }, [])\n\n// ***** Moved to Header.js\n//    function handleSearch(searchText) {\n//         setSearch(searchText);\n//    }\n\n//    function handleSort(dropdown) {\n//        setSortBy(dropdown)\n//    }\n\n//    const sortedProducts = [...products].sort((a, b) => {\n//     if (sortBy === \"name\") {\n//       return a.name - b.name;\n//     } else if (sortBy === \"price\"){\n//         return a.price - b.price;\n//     } else {\n//         return a.id - b.id;\n//     }\n//   });\n\n//     const updatedListings = sortedProducts.filter((product)=> product.name.toLowerCase().includes(search.toLowerCase()) || product.description.toLowerCase().includes(search.toLowerCase()));\n    // ***** \n\n\n// I think this is how we will add products to our order page/cart \n//    function handleAddToOrder(productToAdd) {\n//         const productInFavorites = orders.find(\n//         (product) => product.id === productToAdd.id\n//         );\n//         if (!productInFavorites) {\n//             setFavorites([...orders, productToAdd]);\n//         }\n//     }\n\n//     function handleRemoveFavorite(productToRemove) {\n//         setOrders((orders)=> orders.filter((product)=> product.id !== productToRemove.id));\n//     }\n\n\n    return (\n        <div>\n            <h2>Shop All</h2>\n            <MalaListings \n                products={updatedListings} \n                // handleAddLikes={handleAddLikes} \n                // handleAddFavorite={handleAddFavorite} \n                // andleRemoveFavorite={handleRemoveFavorite} \n            />\n            {/* <Favorites products={orders} handleRemoveFavorite={handleRemoveFavorite} /> */}\n        </div>\n    )\n}\n\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}