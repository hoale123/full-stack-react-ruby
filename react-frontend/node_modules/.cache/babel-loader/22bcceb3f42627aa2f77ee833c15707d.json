{"ast":null,"code":"var _jsxFileName = \"/Users/timle/full-stack-react-ruby-1/react-frontend/src/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nexport default function Register(_ref) {\n  _s();\n\n  let {\n    setUser\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [avatar, setAvatar] = useState('');\n  const [successfullyRegistered, setSuccessfullyRegistered] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${process.env.REACT_APP_API_URL}/register`, {\n      name: name,\n      email: email,\n      password: password,\n      avatar: avatar\n    }, {\n      withCredentials: true\n    }).then(function (response) {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        // console.log(response);\n        setUser(response.data);\n        setSuccessfullyRegistered(true);\n      }\n    }).catch(function (error) {// console.log(error);\n    });\n  };\n\n  if (successfullyRegistered) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '40%',\n        float: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        floated: \"right\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"firstName\",\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true,\n              placeholder: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Avatar URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"avatar\",\n              type: \"text\",\n              value: avatar,\n              onChange: e => setAvatar(e.target.value),\n              placeholder: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Register, \"yj9p0BHj2PjUqP1RNOrLkjfPuI8=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/timle/full-stack-react-ruby-1/react-frontend/src/Register.js"],"names":["useState","Redirect","Button","Form","axios","require","Register","setUser","email","setEmail","password","setPassword","name","setName","avatar","setAvatar","successfullyRegistered","setSuccessfullyRegistered","handleSubmit","e","preventDefault","post","process","env","REACT_APP_API_URL","withCredentials","then","response","data","error","alert","catch","width","float","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form } from 'semantic-ui-react'\n\nconst axios = require(\"axios\");\n\nexport default function Register({ setUser }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [avatar, setAvatar] = useState('')\n  const [successfullyRegistered, setSuccessfullyRegistered] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/register`, {\n        name: name,\n        email: email,\n        password: password,\n        avatar: avatar,\n      },{withCredentials: true})\n      .then(function (response) {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          // console.log(response);\n          setUser(response.data);\n          setSuccessfullyRegistered(true);\n        }\n      })\n      .catch(function (error) {\n        // console.log(error);\n      });\n  };\n  if (successfullyRegistered) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <div style={{width:'40%' , float:'left'}} >\n\n\n      <Form floated='right' onSubmit={handleSubmit}>\n        <Form.Field >\n          <h1>Register</h1>\n          <label>\n            First Name:\n            <input\n              name=\"firstName\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              placeholder=\"First Name\"\n            />\n          </label>\n\n          <label>\n            Email:\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Email\"\n              required\n            />\n          </label>\n\n          <label>\n            Password:\n            <input\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Password\"\n              required\n            />\n          </label>\n\n          <label>\n            Avatar URL:\n            <input\n              name=\"avatar\"\n              type=\"text\"\n              value={avatar}\n              onChange={(e) => setAvatar(e.target.value)}\n              placeholder=\"Avatar\"\n            />\n          </label>\n\n          <Button>Submit</Button>\n        </Form.Field>\n      </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}